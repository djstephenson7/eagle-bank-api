// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String @id @map("id") // Managed manually, must follow usr-<alphanumeric>
  name        String
  email       String @unique
  phoneNumber String
  addressLine1 String
  addressLine2 String
  addressLine3 String
  town         String
  county       String
  postcode     String

  accounts    Account[]
  transactions Transaction[]
}

model Account {
  id               Int      @id @default(autoincrement())
  accountNumber    String   // pattern: ^01\d{6}$
  sortCode         String   // pattern: ^\d{2}-\d{2}-\d{2}$
  name             String
  accountType      AccountType
  balance          Int      // stored in smallest currency unit (e.g. pence), minimum: 0, maximum: 10000
  currency         Currency
  createdTimestamp DateTime @map("createdTimestamp") @default(now())
  updatedTimestamp DateTime @map("updatedTimestamp") @updatedAt

  userId           String
  user             User     @relation(fields: [userId], references: [id])
  transactions     Transaction[]
}

model Transaction {
  id            String   @id @map("id") // pattern: ^tan-[A-Za-z0-9]+$
  amount        Int      // stored in smallest currency unit (e.g. pence), minimum: 0, maximum: 10000
  currency      Currency
  type          TransactionType
  reference     String
  userId        String   // pattern: ^usr-[A-Za-z0-9]+$
  createdTimestamp DateTime @map("createdTimestamp") @default(now())
  // Relations
  user          User     @relation(fields: [userId], references: [id])
  accountId     Int
  account       Account  @relation(fields: [accountId], references: [id])
}

enum Currency {
  GBP
}

enum TransactionType {
  deposit
  withdrawal
}

enum AccountType {
  personal
}
